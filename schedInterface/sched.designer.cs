#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace schedInterface
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="fntech_signage")]
	public partial class schedDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertevent(@event instance);
    partial void Updateevent(@event instance);
    partial void Deleteevent(@event instance);
    partial void Insertsession(session instance);
    partial void Updatesession(session instance);
    partial void Deletesession(session instance);
    partial void Insertlocation(location instance);
    partial void Updatelocation(location instance);
    partial void Deletelocation(location instance);
    #endregion
		
		public schedDataContext() : 
				base(global::schedInterface.Properties.Settings.Default.fntech_signageConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public schedDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public schedDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public schedDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public schedDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<@event> events
		{
			get
			{
				return this.GetTable<@event>();
			}
		}
		
		public System.Data.Linq.Table<session> sessions
		{
			get
			{
				return this.GetTable<session>();
			}
		}
		
		public System.Data.Linq.Table<location> locations
		{
			get
			{
				return this.GetTable<location>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.events_to_update")]
		public ISingleResult<events_to_updateResult> events_to_update()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<events_to_updateResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.events")]
	public partial class @event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _title;
		
		private System.Nullable<System.DateTime> _event_start;
		
		private System.Nullable<System.DateTime> _event_end;
		
		private string _api_key;
		
		private string _url;
		
		private int _interval;
		
		private System.DateTime _last_update;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void Onevent_startChanging(System.Nullable<System.DateTime> value);
    partial void Onevent_startChanged();
    partial void Onevent_endChanging(System.Nullable<System.DateTime> value);
    partial void Onevent_endChanged();
    partial void Onapi_keyChanging(string value);
    partial void Onapi_keyChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnintervalChanging(int value);
    partial void OnintervalChanged();
    partial void Onlast_updateChanging(System.DateTime value);
    partial void Onlast_updateChanged();
    #endregion
		
		public @event()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(255)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_event_start", DbType="Date")]
		public System.Nullable<System.DateTime> event_start
		{
			get
			{
				return this._event_start;
			}
			set
			{
				if ((this._event_start != value))
				{
					this.Onevent_startChanging(value);
					this.SendPropertyChanging();
					this._event_start = value;
					this.SendPropertyChanged("event_start");
					this.Onevent_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_event_end", DbType="Date")]
		public System.Nullable<System.DateTime> event_end
		{
			get
			{
				return this._event_end;
			}
			set
			{
				if ((this._event_end != value))
				{
					this.Onevent_endChanging(value);
					this.SendPropertyChanging();
					this._event_end = value;
					this.SendPropertyChanged("event_end");
					this.Onevent_endChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_api_key", DbType="VarChar(MAX)")]
		public string api_key
		{
			get
			{
				return this._api_key;
			}
			set
			{
				if ((this._api_key != value))
				{
					this.Onapi_keyChanging(value);
					this.SendPropertyChanging();
					this._api_key = value;
					this.SendPropertyChanged("api_key");
					this.Onapi_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="VarChar(MAX)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_interval", DbType="Int NOT NULL")]
		public int interval
		{
			get
			{
				return this._interval;
			}
			set
			{
				if ((this._interval != value))
				{
					this.OnintervalChanging(value);
					this.SendPropertyChanging();
					this._interval = value;
					this.SendPropertyChanged("interval");
					this.OnintervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_update", DbType="DateTime NOT NULL")]
		public System.DateTime last_update
		{
			get
			{
				return this._last_update;
			}
			set
			{
				if ((this._last_update != value))
				{
					this.Onlast_updateChanging(value);
					this.SendPropertyChanging();
					this._last_update = value;
					this.SendPropertyChanged("last_update");
					this.Onlast_updateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sessions")]
	public partial class session : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _event_key;
		
		private bool _active;
		
		private string _title;
		
		private System.Nullable<System.DateTime> _session_start;
		
		private System.Nullable<System.DateTime> _session_end;
		
		private string _type;
		
		private string _description;
		
		private int _seats;
		
		private int _attendees;
		
		private string _venue_id;
		
		private string _venue;
		
		private string _speakers;
		
		private System.DateTime _created;
		
		private System.Nullable<System.DateTime> _modified;
		
		private System.Nullable<int> _event_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onevent_keyChanging(string value);
    partial void Onevent_keyChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void Onsession_startChanging(System.Nullable<System.DateTime> value);
    partial void Onsession_startChanged();
    partial void Onsession_endChanging(System.Nullable<System.DateTime> value);
    partial void Onsession_endChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnseatsChanging(int value);
    partial void OnseatsChanged();
    partial void OnattendeesChanging(int value);
    partial void OnattendeesChanged();
    partial void Onvenue_idChanging(string value);
    partial void Onvenue_idChanged();
    partial void OnvenueChanging(string value);
    partial void OnvenueChanged();
    partial void OnspeakersChanging(string value);
    partial void OnspeakersChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OnmodifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnmodifiedChanged();
    partial void Onevent_idChanging(System.Nullable<int> value);
    partial void Onevent_idChanged();
    #endregion
		
		public session()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_event_key", DbType="VarChar(255)")]
		public string event_key
		{
			get
			{
				return this._event_key;
			}
			set
			{
				if ((this._event_key != value))
				{
					this.Onevent_keyChanging(value);
					this.SendPropertyChanging();
					this._event_key = value;
					this.SendPropertyChanged("event_key");
					this.Onevent_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(MAX)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_session_start", DbType="DateTime")]
		public System.Nullable<System.DateTime> session_start
		{
			get
			{
				return this._session_start;
			}
			set
			{
				if ((this._session_start != value))
				{
					this.Onsession_startChanging(value);
					this.SendPropertyChanging();
					this._session_start = value;
					this.SendPropertyChanged("session_start");
					this.Onsession_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_session_end", DbType="DateTime")]
		public System.Nullable<System.DateTime> session_end
		{
			get
			{
				return this._session_end;
			}
			set
			{
				if ((this._session_end != value))
				{
					this.Onsession_endChanging(value);
					this.SendPropertyChanging();
					this._session_end = value;
					this.SendPropertyChanged("session_end");
					this.Onsession_endChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(255)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seats", DbType="Int NOT NULL")]
		public int seats
		{
			get
			{
				return this._seats;
			}
			set
			{
				if ((this._seats != value))
				{
					this.OnseatsChanging(value);
					this.SendPropertyChanging();
					this._seats = value;
					this.SendPropertyChanged("seats");
					this.OnseatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attendees", DbType="Int NOT NULL")]
		public int attendees
		{
			get
			{
				return this._attendees;
			}
			set
			{
				if ((this._attendees != value))
				{
					this.OnattendeesChanging(value);
					this.SendPropertyChanging();
					this._attendees = value;
					this.SendPropertyChanged("attendees");
					this.OnattendeesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_venue_id", DbType="VarChar(255)")]
		public string venue_id
		{
			get
			{
				return this._venue_id;
			}
			set
			{
				if ((this._venue_id != value))
				{
					this.Onvenue_idChanging(value);
					this.SendPropertyChanging();
					this._venue_id = value;
					this.SendPropertyChanged("venue_id");
					this.Onvenue_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_venue", DbType="VarChar(255)")]
		public string venue
		{
			get
			{
				return this._venue;
			}
			set
			{
				if ((this._venue != value))
				{
					this.OnvenueChanging(value);
					this.SendPropertyChanging();
					this._venue = value;
					this.SendPropertyChanged("venue");
					this.OnvenueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_speakers", DbType="VarChar(MAX)")]
		public string speakers
		{
			get
			{
				return this._speakers;
			}
			set
			{
				if ((this._speakers != value))
				{
					this.OnspeakersChanging(value);
					this.SendPropertyChanging();
					this._speakers = value;
					this.SendPropertyChanged("speakers");
					this.OnspeakersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified", DbType="DateTime")]
		public System.Nullable<System.DateTime> modified
		{
			get
			{
				return this._modified;
			}
			set
			{
				if ((this._modified != value))
				{
					this.OnmodifiedChanging(value);
					this.SendPropertyChanging();
					this._modified = value;
					this.SendPropertyChanged("modified");
					this.OnmodifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_event_id", DbType="Int")]
		public System.Nullable<int> event_id
		{
			get
			{
				return this._event_id;
			}
			set
			{
				if ((this._event_id != value))
				{
					this.Onevent_idChanging(value);
					this.SendPropertyChanging();
					this._event_id = value;
					this.SendPropertyChanged("event_id");
					this.Onevent_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.locations")]
	public partial class location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _sched_id;
		
		private string _title;
		
		private System.Nullable<int> _event_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onsched_idChanging(string value);
    partial void Onsched_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void Onevent_idChanging(System.Nullable<int> value);
    partial void Onevent_idChanged();
    #endregion
		
		public location()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sched_id", DbType="VarChar(255)")]
		public string sched_id
		{
			get
			{
				return this._sched_id;
			}
			set
			{
				if ((this._sched_id != value))
				{
					this.Onsched_idChanging(value);
					this.SendPropertyChanging();
					this._sched_id = value;
					this.SendPropertyChanged("sched_id");
					this.Onsched_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(MAX)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_event_id", DbType="Int")]
		public System.Nullable<int> event_id
		{
			get
			{
				return this._event_id;
			}
			set
			{
				if ((this._event_id != value))
				{
					this.Onevent_idChanging(value);
					this.SendPropertyChanging();
					this._event_id = value;
					this.SendPropertyChanged("event_id");
					this.Onevent_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class events_to_updateResult
	{
		
		private int _id;
		
		private string _title;
		
		private System.Nullable<System.DateTime> _event_start;
		
		private System.Nullable<System.DateTime> _event_end;
		
		private string _api_key;
		
		private string _url;
		
		private int _interval;
		
		private System.DateTime _last_update;
		
		public events_to_updateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(255)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this._title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_event_start", DbType="Date")]
		public System.Nullable<System.DateTime> event_start
		{
			get
			{
				return this._event_start;
			}
			set
			{
				if ((this._event_start != value))
				{
					this._event_start = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_event_end", DbType="Date")]
		public System.Nullable<System.DateTime> event_end
		{
			get
			{
				return this._event_end;
			}
			set
			{
				if ((this._event_end != value))
				{
					this._event_end = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_api_key", DbType="VarChar(MAX)")]
		public string api_key
		{
			get
			{
				return this._api_key;
			}
			set
			{
				if ((this._api_key != value))
				{
					this._api_key = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="VarChar(MAX)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this._url = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_interval", DbType="Int NOT NULL")]
		public int interval
		{
			get
			{
				return this._interval;
			}
			set
			{
				if ((this._interval != value))
				{
					this._interval = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_update", DbType="DateTime NOT NULL")]
		public System.DateTime last_update
		{
			get
			{
				return this._last_update;
			}
			set
			{
				if ((this._last_update != value))
				{
					this._last_update = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
